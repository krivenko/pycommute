Search.setIndex({"docnames": ["changelog", "examples", "expression_ref", "genindex", "index", "installation", "loperator_ref", "models_ref", "reference", "search"], "filenames": ["changelog.md", "examples.rst", "expression_ref.rst", "genindex.rst", "index.rst", "installation.rst", "loperator_ref.rst", "models_ref.rst", "reference.rst", "search.rst"], "titles": ["Changelog", "Usage examples", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycommute.expression</span></code>", "Index", "pycommute", "Installation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycommute.loperator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pycommute.models</span></code>", "API reference", "Search"], "terms": {"all": [0, 1, 2, 6, 7], "notabl": 0, "chang": 0, "thi": [0, 1, 2, 4, 5, 6, 7], "project": [0, 1, 2, 7], "document": [0, 4, 5], "file": 0, "enabl": 0, "support": [0, 1, 4], "python": [0, 1, 2, 4, 5], "3": [0, 1, 2, 7], "11": 0, "method": [0, 1, 6], "__copy__": [0, 2, 6], "__deepcopy__": [0, 2, 6], "few": [0, 4, 5], "mutabl": 0, "object": [0, 1, 4, 6, 7, 8], "express": [0, 1, 4, 6, 7, 8], "monomi": [0, 1, 4, 8], "r": [0, 1], "c": [0, 1, 2, 4, 7], "loper": [0, 1, 4, 8], "hilbertspac": [0, 1, 6], "spacepartit": [0, 1, 6], "new": [0, 6], "subspace_basi": [0, 6], "subspace_bas": [0, 1, 6], "minor": 0, "updat": 0, "function": [0, 1, 4, 6, 7, 8], "make_matrix": [0, 1, 6], "three": [0, 1], "overload": [0, 2, 6], "These": [0, 4], "wrap": 0, "construct": [0, 1, 2, 4, 6, 7], "return": [0, 1, 2, 6, 7], "matrix": [0, 1, 4, 7, 8], "represent": [0, 1, 4, 8], "2d": [0, 1], "numpi": [0, 1, 5, 6], "arrai": [0, 1, 6, 7], "linear": [0, 1, 4, 7, 8], "oper": [0, 1, 2, 4, 7, 8], "act": [0, 1, 6], "full": [0, 1, 4, 8], "hilbert": [0, 1, 4, 8], "space": [0, 1, 4, 8], "its": [0, 1, 2, 6], "subspac": [0, 1, 6], "span": [0, 1, 6], "given": [0, 1, 2, 6, 7], "list": [0, 1, 2, 6, 7], "basi": [0, 1, 6, 7], "vector": [0, 1, 4, 7, 8], "between": [0, 1, 6], "two": [0, 1, 2, 6, 7], "class": [0, 1, 2, 6], "nfermionsectorview": 0, "ar": [0, 1, 2, 4, 5, 6, 7], "compat": 0, "view": [0, 4, 8], "repres": [0, 1, 6], "state": [0, 1, 4, 7, 8], "defin": [0, 1, 4, 7], "an": [0, 1, 2, 4, 6, 7], "n": [0, 2, 4, 7, 8], "fermion": [0, 2, 4, 7, 8], "In": [0, 1], "addit": 0, "util": [0, 1], "n_fermion_sector_s": [0, 1, 6], "n_fermion_sector_basis_st": [0, 6], "nfermionmultisectorview": 0, "multisector": [0, 1, 6], "A": [0, 1, 2, 6, 7], "i": [0, 1, 2, 5, 6, 7], "set": [0, 1, 6, 7], "which": [0, 1, 2, 6, 7], "have": [0, 1, 6], "n_1": [0, 1, 6], "particl": [0, 2, 6, 7], "within": [0, 1, 2, 6], "subset": [0, 1, 4, 6], "mode": [0, 1, 6, 7], "s_1": [0, 1, 6], "n_2": [0, 1, 6], "anoth": [0, 1, 6], "s_2": [0, 1, 6], "so": [0, 1, 6], "There": [0, 1, 2, 6], "can": [0, 1, 6, 7], "ani": [0, 1, 6], "number": [0, 1, 2, 6, 7], "individu": [0, 2, 6, 7], "pair": [0, 1, 2, 6, 7], "s_i": [0, 1, 6], "n_i": [0, 1, 6, 7], "sector": [0, 4, 8], "contribut": [0, 1, 6], "long": [0, 1, 6], "disjoint": [0, 1, 6], "n_fermion_multisector_s": [0, 1, 6], "n_fermion_multisector_basis_st": [0, 6], "has_algebra": [0, 6], "find_connect": [0, 6], "indic": [0, 1, 2, 6, 7], "__getitem__": [0, 2, 6], "index": [0, 1, 4, 6, 8], "ci": 0, "tag": [0, 5], "version": 0, "now": [0, 1, 4], "built": [0, 4], "docker": [0, 4], "imag": [0, 4], "push": 0, "hub": [0, 5], "show": 1, "how": 1, "squar": 1, "lattic": [1, 4, 8], "check": 1, "total": [1, 6, 7], "electron": [1, 7], "conserv": 1, "quantiti": 1, "The": [1, 5, 6, 7], "consid": 1, "here": 1, "sum": [1, 6], "term": [1, 7], "tight": [1, 7], "bind": [1, 4, 7], "onli": [1, 6, 7], "nearest": 1, "neighbour": 1, "hop": [1, 7], "allow": [1, 2, 7], "hat": [1, 6, 7], "h_": [1, 6], "text": [1, 6], "e": [1, 6, 7], "t": [1, 7], "sum_": [1, 6, 7], "sigma": [1, 7], "langl": 1, "j": [1, 6, 7], "rangl": [1, 6], "dagger_": [1, 7], "c_": [1, 7], "harmon": 1, "oscil": 1, "each": [1, 6], "site": [1, 7], "local": [1, 5, 7], "phonon": [1, 7], "ph": 1, "omega_0": 1, "sum_i": 1, "dagger_i": [1, 7], "a_i": [1, 7], "coupl": [1, 7], "g": [1, 7], "n_": [1, 7], "instead": [1, 7], "write": [1, 6], "over": [1, 6], "explicitli": 1, "we": 1, "call": [1, 2], "librari": [1, 4], "tight_bind": [1, 7], "dispers": [1, 7], "holstein_int": [1, 7], "also": [1, 7], "make": [1, 2, 6], "us": [1, 4, 6, 7], "networkx": 1, "packag": [1, 5], "easili": [1, 4], "gener": [1, 4, 6, 7, 8], "adjac": 1, "period": 1, "boundari": 1, "condit": 1, "from": [1, 2, 4, 6, 7], "itertool": 1, "import": 1, "product": [1, 2, 6], "np": 1, "pycommut": [1, 5, 8], "expressionr": [1, 2, 6, 7], "conj": [1, 2], "boson": [1, 2, 4, 6, 7], "grid_2d_graph": 1, "linalg": 1, "graphmatrix": 1, "adjacency_matrix": 1, "let": 1, "u": [1, 7], "direct": [1, 6], "10": [1, 4], "constant": [1, 4, 7, 8], "energi": [1, 7], "paramet": [1, 2, 6, 7], "tb": 1, "0": [1, 4, 5, 6, 7], "graph": 1, "lat": 1, "true": [1, 2, 6], "creat": [1, 7], "up": [1, 7], "down": [1, 7], "node": 1, "x": [1, 2], "y": [1, 2], "indices_up": [1, 7], "indices_dn": [1, 7], "both": [1, 6], "pass": [1, 2, 6], "proport": 1, "hopping_matrix": 1, "todens": 1, "h_e": 1, "frequenc": [1, 7], "w0": 1, "5": [1, 7], "simpli": 1, "indices_phonon": 1, "same": [1, 2, 7], "phonon_freq": 1, "ones": 1, "h_ph": 1, "statist": [1, 7], "h_e_ph": 1, "indices_boson": [1, 7], "complet": 1, "h_h": 1, "print": 1, "quit": 1, "lot": 1, "100": 1, "hermit": 1, "dagger": [1, 2, 6], "commut": 1, "n_e": 1, "rang": [1, 6], "iter": [1, 2], "interfac": 1, "coeffici": [1, 2, 4, 7], "polynomi": [1, 2, 4, 6], "coeff": 1, "algebra": [1, 4, 6, 8], "creation": [1, 2, 6, 7], "annihil": [1, 2, 6, 7], "detect": 1, "what": [1, 6], "belong": [1, 2, 6], "algebra_id": [1, 2, 6], "tfermion": 1, "end": [1, 7], "elif": 1, "tboson": 1, "els": 1, "extract": 1, "carri": [1, 2, 6, 7], "b": [1, 7], "instanc": 1, "special": 1, "tupl": [1, 2, 6, 7], "like": 1, "type": [1, 2, 4], "element": [1, 6, 7], "restrict": 1, "integ": [1, 2, 6, 7], "string": [1, 2, 7], "comparison": 1, "behav": 1, "differ": [1, 2], "those": 1, "otherwis": 1, "len": [1, 2], "access": [1, 2, 5, 6], "protocol": 1, "textbook": 1, "integr": [1, 7], "quantum": [1, 2, 4, 6, 8], "system": [1, 4, 7], "Its": 1, "h": [1, 2, 6, 7], "mathbf": [1, 7], "": [1, 2, 4, 6, 7], "_i": [1, 7], "cdot": [1, 2, 7], "_": [1, 7], "well": 1, "seri": 1, "higher": 1, "order": [1, 2, 6], "charg": 1, "q_n": 1, "exist": 1, "deriv": [1, 7], "transfer": 1, "theori": [1, 4, 8], "explicit": 1, "were": 1, "obtain": 1, "gm94": 1, "follow": [1, 2, 7], "script": 1, "see": [1, 6], "q_m": 1, "m": [1, 2, 6, 7], "4": [1, 6, 7], "motion": 1, "taken": 1, "p": [1, 5], "grabowski": 1, "mathieu": 1, "mod": 1, "phy": 1, "lett": 1, "vol": 1, "09": [1, 4], "No": 1, "24": 1, "pp": 1, "2197": 1, "2206": 1, "1994": 1, "http": [1, 5], "doi": 1, "org": 1, "1142": 1, "s0217732394002057": 1, "zero": [1, 2, 6, 7], "dot": 1, "cross": 1, "s_x": [1, 2], "s_y": [1, 2], "s_z": [1, 2], "20": 1, "exchang": 1, "compon": [1, 2, 6], "s_0": 1, "s_": [1, 2], "exchange_matrix": 1, "correspond": [1, 2, 6, 7], "neighbor": 1, "shift": 1, "modulo": 1, "ensur": [1, 6], "s_tot": 1, "q_3": 1, "1st": 1, "line": 1, "eq": 1, "q3": 1, "q_4": 1, "2nd": 1, "q4": 1, "q_5": 1, "3rd": [1, 2], "q5": 1, "pairwis": 1, "demonstr": 1, "tool": 1, "modul": [1, 2, 4, 7], "along": 1, "eigensolv": 1, "diagon": [1, 4, 7], "simpl": [1, 7], "atom": [1, 7], "jayn": [1, 7], "tc68": 1, "qubit": 1, "coher": 1, "via": 1, "degre": [1, 6, 7], "freedom": [1, 6, 7], "epsilon": 1, "z": [1, 2], "omega": [1, 7], "g_0": 1, "g_1": 1, "form": [1, 6, 7], "conveni": 1, "singl": [1, 2], "jaynes_cum": [1, 7], "sinc": 1, "occup": [1, 7], "formal": 1, "grow": 1, "infti": 1, "artifici": 1, "dimens": [1, 6], "abl": 1, "finit": [1, 6, 7], "our": 1, "problem": 1, "perform": [1, 6], "repeat": 1, "loperatorr": [1, 6], "loperatorc": [1, 6], "limit": 1, "overhead": 1, "For": [1, 4, 6], "larg": 1, "scale": 1, "advis": 1, "make_space_boson": [1, 6], "make_space_spin": [1, 6], "real": [1, 2, 4, 6, 7], "valu": [1, 2, 6, 7], "build": [1, 5, 6], "transit": [1, 7], "ep": [1, 7], "more": [1, 4], "case": [1, 7], "would": 1, "length": [1, 2, 7], "8": 1, "2x1": 1, "6": [1, 4, 5], "dimension": [1, 6], "one": [1, 2, 6], "truncat": [1, 6], "h_op": 1, "prepar": 1, "manual": 1, "h_mat1": 1, "dim": [1, 6], "column": 1, "psi": 1, "store": [1, 6], "result": [1, 2, 6, 7], "th": 1, "h_mat": 1, "ii": [1, 7], "automat": 1, "faster": 1, "h_mat2": 1, "max": 1, "ab": 1, "comput": [1, 6], "eigenvalu": 1, "eigval": 1, "sort": 1, "when": [1, 6], "implement": 1, "exact": [1, 4], "algorithm": [1, 6], "usual": 1, "advantag": 1, "take": [1, 2, 6], "extra": 1, "preparatori": 1, "step": 1, "split": 1, "character": 1, "mani": [1, 4, 8], "situat": [1, 6], "possibl": 1, "find": [1, 6], "even": [1, 7], "without": [1, 6], "know": 1, "skfp16": 1, "shown": 1, "below": 1, "d": [1, 7], "shell": 1, "slater": [1, 7], "parametr": [1, 7], "Then": 1, "emploi": 1, "basismapp": [1, 6], "option": [1, 5, 6, 7], "independ": 1, "wise": 1, "slater_int": [1, 7], "partit": [1, 4, 8], "mapper": 1, "make_space_partit": [1, 6], "radial": [1, 7], "f": [1, 2, 6, 7], "analyz": [1, 6], "structur": 1, "suitabl": 1, "first": [1, 2], "It": [1, 2, 6, 7], "invari": [1, 6, 7], "under": [1, 6], "action": [1, 6], "second": [1, 2], "dictionari": [1, 6], "non": [1, 6], "vanish": [1, 6, 7], "ij": [1, 6, 7], "By": [1, 7], "definit": 1, "sp": [1, 6], "matrix_el": 1, "out": [1, 2, 4], "inform": 1, "about": [1, 4], "reveal": 1, "n_subspac": [1, 6], "bodi": [1, 4, 8], "compil": 1, "enumer": [1, 2], "sector_dim": 1, "size": [1, 6], "translat": [1, 6], "basis_mapp": 1, "current": 1, "receiv": 1, "phi": 1, "1d": 1, "chosen": 1, "cannot": 1, "them": [1, 2, 6], "directli": 1, "expect": 1, "go": 1, "psi_view": 1, "phi_view": 1, "map": [1, 4, 8], "partial": 1, "band": 1, "fermi": [1, 7], "hubbard": [1, 7], "mu": 1, "uparrow": [1, 7], "downarrow": [1, 7], "cluster": 1, "16": 1, "intract": 1, "32": 1, "preserv": 1, "fix": [1, 6], "fdof": 1, "similarli": 1, "moder": 1, "choos": 1, "496": 1, "256": 1, "do": 1, "requir": [1, 6], "pure": 1, "stand": 1, "presenc": 1, "hubbard_int": [1, 7], "relat": 1, "nfermionsectorviewr": [1, 6], "nfermionmultisectorviewr": [1, 6], "nx": 1, "ny": 1, "chemic": 1, "potenti": 1, "coulomb": [1, 7], "repuls": [1, 7], "add": [1, 2, 6], "sector_s": 1, "lowest": 1, "n_up": 1, "n_down": 1, "n_dn": 1, "sector_up": 1, "sector_dn": 1, "multisector_s": 1, "solut": 1, "molecul": 1, "radiat": 1, "field": [1, 7], "w": 1, "rev": 1, "170": 1, "379": 1, "1968": 1, "1103": 1, "physrev": 1, "triq": 1, "cthyb": 1, "continu": [1, 6], "time": [1, 7], "mont": 1, "carlo": 1, "hybridis": 1, "expans": 1, "solver": 1, "impur": 1, "seth": 1, "krivenko": 1, "ferrero": 1, "o": [1, 6, 7], "parcollet": 1, "comp": 1, "comm": 1, "200": [1, 6], "march": [1, 6], "2016": [1, 6], "274": [1, 6], "284": [1, 6], "dx": 1, "1016": 1, "cpc": 1, "2015": 1, "023": 1, "section": [1, 6], "involv": 2, "mechan": [2, 7], "manipul": 2, "thing": 2, "becaus": 2, "thei": [2, 4, 7], "rule": [2, 7], "unlik": 2, "i1": 2, "i2": 2, "alwai": 2, "compar": 2, "mix": [2, 7], "__eq__": [2, 6], "self": [2, 6], "arg0": 2, "bool": [2, 6], "int": [2, 6, 7], "str": [2, 6, 7], "__gt__": [2, 6], "__hash__": [2, 6], "none": [2, 6, 7], "__init__": [2, 6], "arg": [2, 6], "posit": [2, 6], "argument": [2, 6], "__iter__": 2, "__len__": [2, 6], "__lt__": [2, 6], "__ne__": [2, 6], "__repr__": 2, "properti": [2, 6], "2": [2, 4, 5, 6, 7], "spin": [2, 4, 6, 8], "1": [2, 4, 5, 6, 7], "abstract": 2, "g2": 2, "generatorfermion": 2, "base": [2, 6], "fals": [2, 6], "respect": 2, "make_fermion": 2, "generatorboson": 2, "make_boson": 2, "spincompon": 2, "member": 2, "plu": 2, "label": [2, 7], "rais": 2, "minu": 2, "lower": 2, "generatorspin": 2, "kwarg": [2, 6], "float": [2, 6, 7], "half": [2, 6], "whether": 2, "multipl": 2, "make_spin": 2, "__contains__": [2, 6], "memo": [2, 6], "dict": [2, 6], "get": 2, "slice": [2, 7], "ident": 2, "__mul__": [2, 6], "__reverse__": 2, "__rmul__": 2, "is_ord": 2, "canon": 2, "swap_gener": 2, "n1": 2, "n2": 2, "swap": 2, "__add__": 2, "expressionc": [2, 6, 7], "complex": [2, 4, 6, 7], "__iadd__": 2, "__imul__": 2, "equal": 2, "__isub__": 2, "__neg__": 2, "__radd__": 2, "__rsub__": 2, "__sub__": 2, "clear": 2, "reset": 2, "expr": [2, 6], "complexifi": 2, "transform": [2, 6], "callabl": [2, 6], "appli": [2, 6], "replac": 2, "being": 2, "discard": 2, "must": [2, 5, 6, 7], "c_dag": 2, "a_dag": 2, "s_p": 2, "s_m": 2, "make_complex": 2, "hc": 2, "subtract": 2, "level": [2, 7], "mimic": 2, "pm": 2, "notat": 2, "libcommut": [4, 5], "dsl": 4, "toolkit": 4, "inherit": 4, "templat": 4, "expos": 4, "To": 4, "learn": 4, "basic": 4, "concept": 4, "featur": 4, "pleas": 4, "refer": 4, "As": 4, "bonu": 4, "hand": 4, "hamiltonian": [4, 6, 7], "some": [4, 6, 7], "model": [4, 8], "wide": [4, 7], "optic": [4, 8], "usag": 4, "exampl": [4, 5], "api": 4, "instal": 4, "prerequisit": 4, "sourc": [4, 6], "autom": 4, "pip": 4, "holstein": [4, 7], "heisenberg": [4, 7], "chain": 4, "spectrum": 4, "tavi": [4, 7], "cum": [4, 7], "multi": [4, 7], "orbit": [4, 7], "interact": [4, 5, 7], "sequenc": [4, 6, 7, 8], "id": [4, 6, 8], "factori": [4, 6, 8], "hermitian": [4, 6, 8], "conjug": [4, 6, 8], "placehold": [4, 8], "elementari": [4, 8], "dissip": [4, 8], "changelog": 4, "7": 4, "unreleas": 4, "2021": 4, "12": [4, 5], "17": [4, 5], "ad": 4, "03": 4, "30": 4, "search": 4, "page": 4, "user": 4, "code": [4, 5], "mai": 4, "later": 4, "releas": [4, 5], "newer": 5, "either": [5, 7], "directori": 5, "unpack": 5, "pybind11": 5, "sphinx": 5, "rtd": 5, "theme": 5, "myst": 5, "parser": 5, "easi": 5, "run": 5, "libcommute_includedir": 5, "path_to_libcommut": 5, "includ": [5, 6], "setup": 5, "py": 5, "If": [5, 7], "you": 5, "need": [5, 6], "should": 5, "addition": 5, "build_sphinx": 5, "avail": 5, "rm": 5, "8888": 5, "ikrivenko": 5, "latest": 5, "command": 5, "pull": 5, "most": 5, "recent": 5, "launch": 5, "jupyt": 5, "notebook": 5, "server": 5, "127": 5, "elementaryspac": 6, "es2": 6, "associ": 6, "n_bit": 6, "minim": 6, "binari": 6, "digit": 6, "espacefermion": 6, "make_space_fermion": 6, "espaceboson": 6, "logarithm": 6, "espacespin": 6, "pybind11_object": 6, "part": [6, 7], "empti": 6, "elementary_spac": 6, "bits_per_boson": 6, "inspect": 6, "collect": [6, 7], "everi": 6, "found": 6, "algebra_bit_rang": 6, "bit": 6, "basis_state_index": 6, "decompos": 6, "ldot": [6, 7], "rangle_": 6, "arbitrari": 6, "decomposit": 6, "select": 6, "bit_rang": 6, "total_n_bit": 6, "foreach": 6, "functor": 6, "question": [6, 7], "__call__": 6, "src": 6, "ndarrai": [6, 7], "float64": 6, "dst": 6, "destin": 6, "complex128": 6, "mappedbasisviewr": 6, "through": 6, "mappedbasisviewc": 6, "nfermionsectorviewc": 6, "nfermionmultisectorviewc": 6, "sv": 6, "detail": 6, "descript": 6, "physic": 6, "commun": 6, "origin": 6, "connect": 6, "serial": 6, "merge_subspac": 6, "od": 6, "store_matrix_el": 6, "merg": 6, "o_ij": 6, "contain": 6, "union": 6, "entir": 6, "h_ij": 6, "accord": [6, 7], "predefin": 6, "accept": [6, 7], "where": [6, 7], "known": 6, "desir": 6, "particular": 6, "relev": 6, "while": [6, 7], "smaller": 6, "basis_state_indic": 6, "rangle_1": 6, "rangle_2": 6, "rangle_3": 6, "o_list": 6, "o_1": 6, "o_2": 6, "o_3": 6, "o_m": 6, "n_m": 6, "neg": 6, "satisfi": 6, "assign": 6, "specif": 6, "power": 6, "inverse_map": 6, "invers": 6, "slow": 6, "map_index": 6, "descriptor": 6, "lop": 6, "left_basis_state_indic": 6, "right_basis_state_indic": 6, "other": 6, "specifi": 6, "target": 6, "domain": 6, "default": 7, "output": 7, "custom": 7, "come": 7, "xyz": 7, "t_": 7, "o_": 7, "o_j": 7, "numer": 7, "varepsilon_i": 7, "delta": 7, "delta_": 7, "c_i": 7, "c_j": 7, "dagger_j": 7, "zeeman": 7, "describ": 7, "extern": 7, "magnet": 7, "boldsymbol": 7, "tau": 7, "pre": 7, "factor": 7, "land\u00e9": 7, "bohr": 7, "magneton": 7, "planck": 7, "uniti": 7, "pauli": 7, "matric": 7, "rd": 7, "One": 7, "whose": 7, "row": 7, "x_i": 7, "y_i": 7, "z_i": 7, "assum": 7, "dn": 7, "u_i": 7, "bose_hubbard_int": 7, "bose": 7, "extended_hubbard_int": 7, "v": 7, "extend": 7, "frac": 7, "v_": 7, "n_j": 7, "encod": 7, "t_j_int": 7, "j_": 7, "left": 7, "_j": 7, "right": 7, "kondo_int": 7, "indices_spin": 7, "kondo": 7, "j_i": 7, "g_i": 7, "quartic_int": 7, "ijkl": 7, "u_": 7, "o_l": 7, "o_k": 7, "tensor": 7, "kanamori_int": 7, "jx": 7, "jp": 7, "kanamori": 7, "multiorbit": 7, "neq": 7, "j_x": 7, "d_": 7, "j_p": 7, "provid": 7, "rest": 7, "2j": 7, "choic": 7, "rotation": 7, "vice": 7, "versa": 7, "intra": 7, "hund": 7, "inter": 7, "flip": 7, "2l": 7, "fulli": 7, "m_1": 7, "m_2": 7, "m_3": 7, "m_4": 7, "l": 7, "combin": 7, "f_0": 7, "f_2": 7, "f_4": 7, "f_": 7, "angular": 7, "a_k": 7, "k": 7, "f_k": 7, "odd": 7, "begin": 7, "multlin": 7, "pmatrix": 7, "q": 7, "ising": 7, "h_l": 7, "h_t": 7, "Ising": 7, "z_j": 7, "l_i": 7, "t_i": 7, "longitudin": 7, "transvers": 7, "alpha_i": 7, "anisotropic_heisenberg": 7, "anisotrop": 7, "x_": 7, "x_j": 7, "y_": 7, "y_j": 7, "z_": 7, "triplet": 7, "biquadratic_spin_int": 7, "biquadrat": 7, "dzyaloshinskii_moriya": 7, "dzyaloshinskii": 7, "moriya": 7, "spin_boson": 7, "lambda_": 7, "epsilon_i": 7, "delta_i": 7, "omega_m": 7, "dagger_m": 7, "a_m": 7, "im": 7, "lambda": 7, "bias": 7, "tunnel": 7, "amplitud": 7, "rabi": 7, "indices_atom": 7, "caviti": 7, "g_": 7, "pseudo": 7}, "objects": {"pycommute": [[2, 0, 0, "-", "expression"], [6, 0, 0, "-", "loperator"], [7, 0, 0, "-", "models"]], "pycommute.expression": [[2, 1, 1, "", "BOSON"], [2, 2, 1, "", "ExpressionC"], [2, 2, 1, "", "ExpressionR"], [2, 1, 1, "", "FERMION"], [2, 2, 1, "", "Generator"], [2, 2, 1, "", "GeneratorBoson"], [2, 2, 1, "", "GeneratorFermion"], [2, 2, 1, "", "GeneratorSpin"], [2, 2, 1, "", "HC"], [2, 2, 1, "", "Indices"], [2, 2, 1, "", "Monomial"], [2, 1, 1, "", "SPIN"], [2, 3, 1, "", "S_m"], [2, 3, 1, "", "S_p"], [2, 3, 1, "", "S_x"], [2, 3, 1, "", "S_y"], [2, 3, 1, "", "S_z"], [2, 2, 1, "", "SpinComponent"], [2, 3, 1, "", "a"], [2, 3, 1, "", "a_dag"], [2, 3, 1, "", "c"], [2, 3, 1, "", "c_dag"], [2, 3, 1, "", "conj"], [2, 1, 1, "", "hc"], [2, 3, 1, "", "make_boson"], [2, 3, 1, "", "make_complex"], [2, 3, 1, "", "make_fermion"], [2, 3, 1, "", "make_spin"], [2, 3, 1, "", "n"], [2, 3, 1, "", "transform"]], "pycommute.expression.ExpressionC": [[2, 3, 1, "", "__add__"], [2, 3, 1, "", "__copy__"], [2, 3, 1, "", "__deepcopy__"], [2, 3, 1, "", "__eq__"], [2, 1, 1, "", "__hash__"], [2, 3, 1, "", "__iadd__"], [2, 3, 1, "", "__imul__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "__isub__"], [2, 3, 1, "", "__iter__"], [2, 3, 1, "", "__len__"], [2, 3, 1, "", "__mul__"], [2, 3, 1, "", "__ne__"], [2, 3, 1, "", "__neg__"], [2, 3, 1, "", "__radd__"], [2, 3, 1, "", "__repr__"], [2, 3, 1, "", "__rmul__"], [2, 3, 1, "", "__rsub__"], [2, 3, 1, "", "__sub__"], [2, 3, 1, "", "clear"]], "pycommute.expression.ExpressionR": [[2, 3, 1, "", "__add__"], [2, 3, 1, "", "__copy__"], [2, 3, 1, "", "__deepcopy__"], [2, 3, 1, "", "__eq__"], [2, 1, 1, "", "__hash__"], [2, 3, 1, "", "__iadd__"], [2, 3, 1, "", "__imul__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "__isub__"], [2, 3, 1, "", "__iter__"], [2, 3, 1, "", "__len__"], [2, 3, 1, "", "__mul__"], [2, 3, 1, "", "__ne__"], [2, 3, 1, "", "__neg__"], [2, 3, 1, "", "__radd__"], [2, 3, 1, "", "__repr__"], [2, 3, 1, "", "__rmul__"], [2, 3, 1, "", "__rsub__"], [2, 3, 1, "", "__sub__"], [2, 3, 1, "", "clear"]], "pycommute.expression.Generator": [[2, 3, 1, "", "__eq__"], [2, 3, 1, "", "__gt__"], [2, 1, 1, "", "__hash__"], [2, 3, 1, "", "__lt__"], [2, 3, 1, "", "__ne__"], [2, 3, 1, "", "__repr__"], [2, 4, 1, "", "algebra_id"], [2, 4, 1, "", "indices"]], "pycommute.expression.GeneratorBoson": [[2, 3, 1, "", "__init__"], [2, 4, 1, "", "dagger"]], "pycommute.expression.GeneratorFermion": [[2, 3, 1, "", "__init__"], [2, 4, 1, "", "dagger"]], "pycommute.expression.GeneratorSpin": [[2, 3, 1, "", "__init__"], [2, 4, 1, "", "component"], [2, 4, 1, "", "multiplicity"], [2, 4, 1, "", "spin"]], "pycommute.expression.Indices": [[2, 3, 1, "", "__eq__"], [2, 3, 1, "", "__getitem__"], [2, 3, 1, "", "__gt__"], [2, 1, 1, "", "__hash__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "__iter__"], [2, 3, 1, "", "__len__"], [2, 3, 1, "", "__lt__"], [2, 3, 1, "", "__ne__"], [2, 3, 1, "", "__repr__"], [2, 4, 1, "", "indices"]], "pycommute.expression.Monomial": [[2, 3, 1, "", "__contains__"], [2, 3, 1, "", "__copy__"], [2, 3, 1, "", "__deepcopy__"], [2, 3, 1, "", "__eq__"], [2, 3, 1, "", "__getitem__"], [2, 3, 1, "", "__gt__"], [2, 1, 1, "", "__hash__"], [2, 3, 1, "", "__init__"], [2, 3, 1, "", "__iter__"], [2, 3, 1, "", "__len__"], [2, 3, 1, "", "__lt__"], [2, 3, 1, "", "__mul__"], [2, 3, 1, "", "__ne__"], [2, 3, 1, "", "__repr__"], [2, 3, 1, "", "__reverse__"], [2, 3, 1, "", "__rmul__"], [2, 4, 1, "", "is_ordered"], [2, 3, 1, "", "swap_generators"]], "pycommute.loperator": [[6, 2, 1, "", "BasisMapper"], [6, 2, 1, "", "ESpaceBoson"], [6, 2, 1, "", "ESpaceFermion"], [6, 2, 1, "", "ESpaceSpin"], [6, 2, 1, "", "ElementarySpace"], [6, 2, 1, "", "HilbertSpace"], [6, 2, 1, "", "LOperatorC"], [6, 2, 1, "", "LOperatorR"], [6, 2, 1, "", "MappedBasisViewC"], [6, 2, 1, "", "MappedBasisViewR"], [6, 2, 1, "", "NFermionMultiSectorViewC"], [6, 2, 1, "", "NFermionMultiSectorViewR"], [6, 2, 1, "", "NFermionSectorViewC"], [6, 2, 1, "", "NFermionSectorViewR"], [6, 2, 1, "", "SpacePartition"], [6, 3, 1, "", "foreach"], [6, 3, 1, "", "make_matrix"], [6, 3, 1, "", "make_space_boson"], [6, 3, 1, "", "make_space_fermion"], [6, 3, 1, "", "make_space_partition"], [6, 3, 1, "", "make_space_spin"], [6, 3, 1, "", "n_fermion_multisector_basis_states"], [6, 3, 1, "", "n_fermion_multisector_size"], [6, 3, 1, "", "n_fermion_sector_basis_states"], [6, 3, 1, "", "n_fermion_sector_size"]], "pycommute.loperator.BasisMapper": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "__len__"], [6, 4, 1, "", "inverse_map"], [6, 4, 1, "", "map"]], "pycommute.loperator.ESpaceBoson": [[6, 3, 1, "", "__init__"]], "pycommute.loperator.ESpaceFermion": [[6, 3, 1, "", "__init__"]], "pycommute.loperator.ESpaceSpin": [[6, 3, 1, "", "__init__"]], "pycommute.loperator.ElementarySpace": [[6, 3, 1, "", "__eq__"], [6, 3, 1, "", "__gt__"], [6, 1, 1, "", "__hash__"], [6, 3, 1, "", "__lt__"], [6, 3, 1, "", "__ne__"], [6, 4, 1, "", "algebra_id"], [6, 4, 1, "", "indices"], [6, 4, 1, "", "n_bits"]], "pycommute.loperator.HilbertSpace": [[6, 3, 1, "", "__contains__"], [6, 3, 1, "", "__copy__"], [6, 3, 1, "", "__deepcopy__"], [6, 3, 1, "", "__eq__"], [6, 1, 1, "", "__hash__"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "__len__"], [6, 3, 1, "", "__ne__"], [6, 3, 1, "", "add"], [6, 3, 1, "", "algebra_bit_range"], [6, 3, 1, "", "basis_state_index"], [6, 3, 1, "", "bit_range"], [6, 4, 1, "", "dim"], [6, 3, 1, "", "has_algebra"], [6, 3, 1, "", "index"], [6, 4, 1, "", "total_n_bits"]], "pycommute.loperator.LOperatorC": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "__mul__"]], "pycommute.loperator.LOperatorR": [[6, 3, 1, "", "__call__"], [6, 3, 1, "", "__init__"], [6, 3, 1, "", "__mul__"]], "pycommute.loperator.MappedBasisViewC": [[6, 3, 1, "", "__init__"]], "pycommute.loperator.MappedBasisViewR": [[6, 3, 1, "", "__init__"]], "pycommute.loperator.NFermionMultiSectorViewC": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "map_index"]], "pycommute.loperator.NFermionMultiSectorViewR": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "map_index"]], "pycommute.loperator.NFermionSectorViewC": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "map_index"]], "pycommute.loperator.NFermionSectorViewR": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "map_index"]], "pycommute.loperator.SpacePartition": [[6, 3, 1, "", "__copy__"], [6, 3, 1, "", "__deepcopy__"], [6, 3, 1, "", "__getitem__"], [6, 3, 1, "", "__init__"], [6, 4, 1, "", "dim"], [6, 3, 1, "", "find_connections"], [6, 3, 1, "", "merge_subspaces"], [6, 4, 1, "", "n_subspaces"], [6, 3, 1, "", "subspace_bases"], [6, 3, 1, "", "subspace_basis"]], "pycommute.models": [[7, 5, 1, "", "anisotropic_heisenberg"], [7, 5, 1, "", "biquadratic_spin_int"], [7, 5, 1, "", "bose_hubbard_int"], [7, 5, 1, "", "dispersion"], [7, 5, 1, "", "dzyaloshinskii_moriya"], [7, 5, 1, "", "extended_hubbard_int"], [7, 5, 1, "", "heisenberg"], [7, 5, 1, "", "holstein_int"], [7, 5, 1, "", "hubbard_int"], [7, 5, 1, "", "ising"], [7, 5, 1, "", "jaynes_cummings"], [7, 5, 1, "", "kanamori_int"], [7, 5, 1, "", "kondo_int"], [7, 5, 1, "", "pairing"], [7, 5, 1, "", "quartic_int"], [7, 5, 1, "", "rabi"], [7, 5, 1, "", "slater_int"], [7, 5, 1, "", "spin_boson"], [7, 5, 1, "", "t_j_int"], [7, 5, 1, "", "tight_binding"], [7, 5, 1, "", "zeeman"]]}, "objtypes": {"0": "py:module", "1": "py:attribute", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "0": 0, "7": 0, "2": [0, 1], "unreleas": 0, "1": [0, 1], "2021": 0, "12": 0, "17": 0, "10": 0, "09": 0, "ad": 0, "6": 0, "03": 0, "30": 0, "usag": 1, "exampl": 1, "holstein": 1, "model": [1, 7], "spin": [1, 7], "heisenberg": 1, "chain": 1, "spectrum": 1, "tavi": 1, "cum": 1, "sector": [1, 6], "multi": 1, "orbit": 1, "interact": 1, "hamiltonian": 1, "n": [1, 6], "fermion": [1, 6], "view": [1, 6], "refer": [1, 8], "pycommut": [2, 4, 6, 7], "express": 2, "index": [2, 3], "sequenc": 2, "algebra": 2, "id": 2, "constant": 2, "gener": 2, "object": 2, "monomi": 2, "factori": 2, "function": 2, "hermitian": 2, "conjug": 2, "placehold": 2, "content": 4, "instal": 5, "prerequisit": 5, "from": 5, "sourc": 5, "autom": 5, "us": 5, "pip": 5, "docker": 5, "imag": 5, "loper": 6, "elementari": 6, "space": 6, "full": 6, "hilbert": 6, "linear": 6, "oper": 6, "partit": 6, "map": 6, "state": 6, "vector": 6, "matrix": 6, "represent": 6, "quantum": 7, "mani": 7, "bodi": 7, "theori": 7, "lattic": 7, "optic": 7, "dissip": 7, "api": 8, "search": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Changelog": [[0, "changelog"]], "[0.7.2] - Unreleased": [[0, "unreleased"]], "[0.7.1] - 2021-12-17": [[0, "id1"]], "[0.7.0] - 2021-10-09": [[0, "id2"]], "Added": [[0, "added"], [0, "id4"]], "[0.6.1] - 2021-03-30": [[0, "id3"]], "Usage examples": [[1, "usage-examples"]], "Holstein model": [[1, "holstein-model"]], "Spin-1/2 Heisenberg chain": [[1, "spin-1-2-heisenberg-chain"]], "Spectrum of Tavis-Cummings model": [[1, "spectrum-of-tavis-cummings-model"]], "Sectors of a multi-orbital interaction Hamiltonian": [[1, "sectors-of-a-multi-orbital-interaction-hamiltonian"]], "N-fermion sector views": [[1, "n-fermion-sector-views"]], "References": [[1, "references"]], "pycommute.expression": [[2, "module-pycommute.expression"]], "Index sequence": [[2, "index-sequence"]], "Algebra ID constants": [[2, "algebra-id-constants"]], "Algebra generator objects": [[2, "algebra-generator-objects"]], "Monomial object": [[2, "monomial-object"]], "Expression objects": [[2, "expression-objects"]], "Expression factory functions": [[2, "expression-factory-functions"]], "Hermitian conjugate placeholder": [[2, "hermitian-conjugate-placeholder"]], "Index": [[3, "index"]], "pycommute": [[4, "pycommute"]], "Contents": [[4, "contents"]], "Installation": [[5, "installation"]], "Prerequisites": [[5, "prerequisites"]], "Installation from sources": [[5, "installation-from-sources"]], "Automated installation using pip": [[5, "automated-installation-using-pip"]], "Docker images": [[5, "docker-images"]], "pycommute.loperator": [[6, "module-pycommute.loperator"]], "Elementary spaces": [[6, "elementary-spaces"]], "Full Hilbert spaces": [[6, "full-hilbert-spaces"]], "Linear operators": [[6, "linear-operators"]], "Hilbert space partition": [[6, "hilbert-space-partition"]], "Mapped views of state vectors": [[6, "mapped-views-of-state-vectors"]], "N-fermion sector views of state vectors": [[6, "n-fermion-sector-views-of-state-vectors"]], "Matrix representation of linear operators": [[6, "matrix-representation-of-linear-operators"]], "pycommute.models": [[7, "module-pycommute.models"]], "Quantum many-body theory": [[7, "quantum-many-body-theory"]], "Spin lattice models": [[7, "spin-lattice-models"]], "Quantum optics and quantum dissipation": [[7, "quantum-optics-and-quantum-dissipation"]], "API reference": [[8, "api-reference"]], "Search": [[9, "search"]]}, "indexentries": {"boson (pycommute.expression attribute)": [[2, "pycommute.expression.BOSON"]], "expressionc (class in pycommute.expression)": [[2, "pycommute.expression.ExpressionC"]], "expressionr (class in pycommute.expression)": [[2, "pycommute.expression.ExpressionR"]], "fermion (pycommute.expression attribute)": [[2, "pycommute.expression.FERMION"]], "generator (class in pycommute.expression)": [[2, "pycommute.expression.Generator"]], "generatorboson (class in pycommute.expression)": [[2, "pycommute.expression.GeneratorBoson"]], "generatorfermion (class in pycommute.expression)": [[2, "pycommute.expression.GeneratorFermion"]], "generatorspin (class in pycommute.expression)": [[2, "pycommute.expression.GeneratorSpin"]], "hc (class in pycommute.expression)": [[2, "pycommute.expression.HC"]], "indices (class in pycommute.expression)": [[2, "pycommute.expression.Indices"]], "monomial (class in pycommute.expression)": [[2, "pycommute.expression.Monomial"]], "spin (pycommute.expression attribute)": [[2, "pycommute.expression.SPIN"]], "s_m() (pycommute.expression method)": [[2, "pycommute.expression.S_m"]], "s_p() (pycommute.expression method)": [[2, "pycommute.expression.S_p"]], "s_x() (pycommute.expression method)": [[2, "pycommute.expression.S_x"]], "s_y() (pycommute.expression method)": [[2, "pycommute.expression.S_y"]], "s_z() (pycommute.expression method)": [[2, "pycommute.expression.S_z"]], "spincomponent (class in pycommute.expression)": [[2, "pycommute.expression.SpinComponent"]], "__add__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__add__"]], "__add__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__add__"]], "__contains__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__contains__"]], "__copy__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__copy__"]], "__copy__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__copy__"]], "__copy__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__copy__"]], "__deepcopy__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__deepcopy__"]], "__deepcopy__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__deepcopy__"]], "__deepcopy__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__deepcopy__"]], "__eq__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__eq__"]], "__eq__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__eq__"]], "__eq__() (pycommute.expression.generator method)": [[2, "pycommute.expression.Generator.__eq__"]], "__eq__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__eq__"]], "__eq__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__eq__"]], "__getitem__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__getitem__"]], "__getitem__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__getitem__"]], "__gt__() (pycommute.expression.generator method)": [[2, "pycommute.expression.Generator.__gt__"]], "__gt__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__gt__"]], "__gt__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__gt__"]], "__hash__ (pycommute.expression.expressionc attribute)": [[2, "pycommute.expression.ExpressionC.__hash__"]], "__hash__ (pycommute.expression.expressionr attribute)": [[2, "pycommute.expression.ExpressionR.__hash__"]], "__hash__ (pycommute.expression.generator attribute)": [[2, "pycommute.expression.Generator.__hash__"]], "__hash__ (pycommute.expression.indices attribute)": [[2, "pycommute.expression.Indices.__hash__"]], "__hash__ (pycommute.expression.monomial attribute)": [[2, "pycommute.expression.Monomial.__hash__"]], "__iadd__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__iadd__"]], "__iadd__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__iadd__"]], "__imul__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__imul__"]], "__imul__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__imul__"]], "__init__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__init__"]], "__init__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__init__"]], "__init__() (pycommute.expression.generatorboson method)": [[2, "pycommute.expression.GeneratorBoson.__init__"]], "__init__() (pycommute.expression.generatorfermion method)": [[2, "pycommute.expression.GeneratorFermion.__init__"]], "__init__() (pycommute.expression.generatorspin method)": [[2, "pycommute.expression.GeneratorSpin.__init__"]], "__init__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__init__"]], "__init__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__init__"]], "__isub__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__isub__"]], "__isub__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__isub__"]], "__iter__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__iter__"]], "__iter__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__iter__"]], "__iter__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__iter__"]], "__iter__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__iter__"]], "__len__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__len__"]], "__len__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__len__"]], "__len__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__len__"]], "__len__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__len__"]], "__lt__() (pycommute.expression.generator method)": [[2, "pycommute.expression.Generator.__lt__"]], "__lt__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__lt__"]], "__lt__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__lt__"]], "__mul__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__mul__"]], "__mul__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__mul__"]], "__mul__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__mul__"]], "__ne__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__ne__"]], "__ne__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__ne__"]], "__ne__() (pycommute.expression.generator method)": [[2, "pycommute.expression.Generator.__ne__"]], "__ne__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__ne__"]], "__ne__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__ne__"]], "__neg__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__neg__"]], "__neg__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__neg__"]], "__radd__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__radd__"]], "__radd__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__radd__"]], "__repr__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__repr__"]], "__repr__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__repr__"]], "__repr__() (pycommute.expression.generator method)": [[2, "pycommute.expression.Generator.__repr__"]], "__repr__() (pycommute.expression.indices method)": [[2, "pycommute.expression.Indices.__repr__"]], "__repr__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__repr__"]], "__reverse__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__reverse__"]], "__rmul__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__rmul__"]], "__rmul__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__rmul__"]], "__rmul__() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.__rmul__"]], "__rsub__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__rsub__"]], "__rsub__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__rsub__"]], "__sub__() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.__sub__"]], "__sub__() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.__sub__"]], "a() (pycommute.expression method)": [[2, "pycommute.expression.a"]], "a_dag() (pycommute.expression method)": [[2, "pycommute.expression.a_dag"]], "algebra_id (pycommute.expression.generator property)": [[2, "pycommute.expression.Generator.algebra_id"]], "c() (pycommute.expression method)": [[2, "pycommute.expression.c"]], "c_dag() (pycommute.expression method)": [[2, "pycommute.expression.c_dag"]], "clear() (pycommute.expression.expressionc method)": [[2, "pycommute.expression.ExpressionC.clear"]], "clear() (pycommute.expression.expressionr method)": [[2, "pycommute.expression.ExpressionR.clear"]], "component (pycommute.expression.generatorspin property)": [[2, "pycommute.expression.GeneratorSpin.component"]], "conj() (pycommute.expression method)": [[2, "pycommute.expression.conj"]], "dagger (pycommute.expression.generatorboson property)": [[2, "pycommute.expression.GeneratorBoson.dagger"]], "dagger (pycommute.expression.generatorfermion property)": [[2, "pycommute.expression.GeneratorFermion.dagger"]], "hc (pycommute.expression attribute)": [[2, "pycommute.expression.hc"]], "indices (pycommute.expression.generator property)": [[2, "pycommute.expression.Generator.indices"]], "indices (pycommute.expression.indices property)": [[2, "pycommute.expression.Indices.indices"]], "is_ordered (pycommute.expression.monomial property)": [[2, "pycommute.expression.Monomial.is_ordered"]], "make_boson() (pycommute.expression method)": [[2, "pycommute.expression.make_boson"]], "make_complex() (pycommute.expression method)": [[2, "pycommute.expression.make_complex"]], "make_fermion() (pycommute.expression method)": [[2, "pycommute.expression.make_fermion"]], "make_spin() (pycommute.expression method)": [[2, "pycommute.expression.make_spin"]], "module": [[2, "module-pycommute.expression"], [6, "module-pycommute.loperator"], [7, "module-pycommute.models"]], "multiplicity (pycommute.expression.generatorspin property)": [[2, "pycommute.expression.GeneratorSpin.multiplicity"]], "n() (pycommute.expression method)": [[2, "pycommute.expression.n"]], "pycommute.expression": [[2, "module-pycommute.expression"]], "spin (pycommute.expression.generatorspin property)": [[2, "pycommute.expression.GeneratorSpin.spin"]], "swap_generators() (pycommute.expression.monomial method)": [[2, "pycommute.expression.Monomial.swap_generators"]], "transform() (pycommute.expression method)": [[2, "pycommute.expression.transform"]], "basismapper (class in pycommute.loperator)": [[6, "pycommute.loperator.BasisMapper"]], "espaceboson (class in pycommute.loperator)": [[6, "pycommute.loperator.ESpaceBoson"]], "espacefermion (class in pycommute.loperator)": [[6, "pycommute.loperator.ESpaceFermion"]], "espacespin (class in pycommute.loperator)": [[6, "pycommute.loperator.ESpaceSpin"]], "elementaryspace (class in pycommute.loperator)": [[6, "pycommute.loperator.ElementarySpace"]], "hilbertspace (class in pycommute.loperator)": [[6, "pycommute.loperator.HilbertSpace"]], "loperatorc (class in pycommute.loperator)": [[6, "pycommute.loperator.LOperatorC"]], "loperatorr (class in pycommute.loperator)": [[6, "pycommute.loperator.LOperatorR"]], "mappedbasisviewc (class in pycommute.loperator)": [[6, "pycommute.loperator.MappedBasisViewC"]], "mappedbasisviewr (class in pycommute.loperator)": [[6, "pycommute.loperator.MappedBasisViewR"]], "nfermionmultisectorviewc (class in pycommute.loperator)": [[6, "pycommute.loperator.NFermionMultiSectorViewC"]], "nfermionmultisectorviewr (class in pycommute.loperator)": [[6, "pycommute.loperator.NFermionMultiSectorViewR"]], "nfermionsectorviewc (class in pycommute.loperator)": [[6, "pycommute.loperator.NFermionSectorViewC"]], "nfermionsectorviewr (class in pycommute.loperator)": [[6, "pycommute.loperator.NFermionSectorViewR"]], "spacepartition (class in pycommute.loperator)": [[6, "pycommute.loperator.SpacePartition"]], "__call__() (pycommute.loperator.basismapper method)": [[6, "pycommute.loperator.BasisMapper.__call__"]], "__call__() (pycommute.loperator.loperatorc method)": [[6, "pycommute.loperator.LOperatorC.__call__"]], "__call__() (pycommute.loperator.loperatorr method)": [[6, "pycommute.loperator.LOperatorR.__call__"]], "__contains__() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.__contains__"]], "__copy__() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.__copy__"]], "__copy__() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.__copy__"]], "__deepcopy__() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.__deepcopy__"]], "__deepcopy__() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.__deepcopy__"]], "__eq__() (pycommute.loperator.elementaryspace method)": [[6, "pycommute.loperator.ElementarySpace.__eq__"]], "__eq__() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.__eq__"]], "__getitem__() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.__getitem__"]], "__gt__() (pycommute.loperator.elementaryspace method)": [[6, "pycommute.loperator.ElementarySpace.__gt__"]], "__hash__ (pycommute.loperator.elementaryspace attribute)": [[6, "pycommute.loperator.ElementarySpace.__hash__"]], "__hash__ (pycommute.loperator.hilbertspace attribute)": [[6, "pycommute.loperator.HilbertSpace.__hash__"]], "__init__() (pycommute.loperator.basismapper method)": [[6, "pycommute.loperator.BasisMapper.__init__"]], "__init__() (pycommute.loperator.espaceboson method)": [[6, "pycommute.loperator.ESpaceBoson.__init__"]], "__init__() (pycommute.loperator.espacefermion method)": [[6, "pycommute.loperator.ESpaceFermion.__init__"]], "__init__() (pycommute.loperator.espacespin method)": [[6, "pycommute.loperator.ESpaceSpin.__init__"]], "__init__() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.__init__"]], "__init__() (pycommute.loperator.loperatorc method)": [[6, "pycommute.loperator.LOperatorC.__init__"]], "__init__() (pycommute.loperator.loperatorr method)": [[6, "pycommute.loperator.LOperatorR.__init__"]], "__init__() (pycommute.loperator.mappedbasisviewc method)": [[6, "pycommute.loperator.MappedBasisViewC.__init__"]], "__init__() (pycommute.loperator.mappedbasisviewr method)": [[6, "pycommute.loperator.MappedBasisViewR.__init__"]], "__init__() (pycommute.loperator.nfermionmultisectorviewc method)": [[6, "pycommute.loperator.NFermionMultiSectorViewC.__init__"]], "__init__() (pycommute.loperator.nfermionmultisectorviewr method)": [[6, "pycommute.loperator.NFermionMultiSectorViewR.__init__"]], "__init__() (pycommute.loperator.nfermionsectorviewc method)": [[6, "pycommute.loperator.NFermionSectorViewC.__init__"]], "__init__() (pycommute.loperator.nfermionsectorviewr method)": [[6, "pycommute.loperator.NFermionSectorViewR.__init__"]], "__init__() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.__init__"]], "__len__() (pycommute.loperator.basismapper method)": [[6, "pycommute.loperator.BasisMapper.__len__"]], "__len__() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.__len__"]], "__lt__() (pycommute.loperator.elementaryspace method)": [[6, "pycommute.loperator.ElementarySpace.__lt__"]], "__mul__() (pycommute.loperator.loperatorc method)": [[6, "pycommute.loperator.LOperatorC.__mul__"]], "__mul__() (pycommute.loperator.loperatorr method)": [[6, "pycommute.loperator.LOperatorR.__mul__"]], "__ne__() (pycommute.loperator.elementaryspace method)": [[6, "pycommute.loperator.ElementarySpace.__ne__"]], "__ne__() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.__ne__"]], "add() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.add"]], "algebra_bit_range() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.algebra_bit_range"]], "algebra_id (pycommute.loperator.elementaryspace property)": [[6, "pycommute.loperator.ElementarySpace.algebra_id"]], "basis_state_index() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.basis_state_index"]], "bit_range() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.bit_range"]], "dim (pycommute.loperator.hilbertspace property)": [[6, "pycommute.loperator.HilbertSpace.dim"]], "dim (pycommute.loperator.spacepartition property)": [[6, "pycommute.loperator.SpacePartition.dim"]], "find_connections() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.find_connections"]], "foreach() (pycommute.loperator method)": [[6, "pycommute.loperator.foreach"]], "has_algebra() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.has_algebra"]], "index() (pycommute.loperator.hilbertspace method)": [[6, "pycommute.loperator.HilbertSpace.index"]], "indices (pycommute.loperator.elementaryspace property)": [[6, "pycommute.loperator.ElementarySpace.indices"]], "inverse_map (pycommute.loperator.basismapper property)": [[6, "pycommute.loperator.BasisMapper.inverse_map"]], "make_matrix() (pycommute.loperator method)": [[6, "pycommute.loperator.make_matrix"]], "make_space_boson() (pycommute.loperator method)": [[6, "pycommute.loperator.make_space_boson"]], "make_space_fermion() (pycommute.loperator method)": [[6, "pycommute.loperator.make_space_fermion"]], "make_space_partition() (pycommute.loperator method)": [[6, "pycommute.loperator.make_space_partition"]], "make_space_spin() (pycommute.loperator method)": [[6, "pycommute.loperator.make_space_spin"]], "map (pycommute.loperator.basismapper property)": [[6, "pycommute.loperator.BasisMapper.map"]], "map_index() (pycommute.loperator.nfermionmultisectorviewc method)": [[6, "pycommute.loperator.NFermionMultiSectorViewC.map_index"]], "map_index() (pycommute.loperator.nfermionmultisectorviewr method)": [[6, "pycommute.loperator.NFermionMultiSectorViewR.map_index"]], "map_index() (pycommute.loperator.nfermionsectorviewc method)": [[6, "pycommute.loperator.NFermionSectorViewC.map_index"]], "map_index() (pycommute.loperator.nfermionsectorviewr method)": [[6, "pycommute.loperator.NFermionSectorViewR.map_index"]], "merge_subspaces() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.merge_subspaces"]], "n_bits (pycommute.loperator.elementaryspace property)": [[6, "pycommute.loperator.ElementarySpace.n_bits"]], "n_fermion_multisector_basis_states() (pycommute.loperator method)": [[6, "pycommute.loperator.n_fermion_multisector_basis_states"]], "n_fermion_multisector_size() (pycommute.loperator method)": [[6, "pycommute.loperator.n_fermion_multisector_size"]], "n_fermion_sector_basis_states() (pycommute.loperator method)": [[6, "pycommute.loperator.n_fermion_sector_basis_states"]], "n_fermion_sector_size() (pycommute.loperator method)": [[6, "pycommute.loperator.n_fermion_sector_size"]], "n_subspaces (pycommute.loperator.spacepartition property)": [[6, "pycommute.loperator.SpacePartition.n_subspaces"]], "pycommute.loperator": [[6, "module-pycommute.loperator"]], "subspace_bases() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.subspace_bases"]], "subspace_basis() (pycommute.loperator.spacepartition method)": [[6, "pycommute.loperator.SpacePartition.subspace_basis"]], "total_n_bits (pycommute.loperator.hilbertspace property)": [[6, "pycommute.loperator.HilbertSpace.total_n_bits"]], "anisotropic_heisenberg() (in module pycommute.models)": [[7, "pycommute.models.anisotropic_heisenberg"]], "biquadratic_spin_int() (in module pycommute.models)": [[7, "pycommute.models.biquadratic_spin_int"]], "bose_hubbard_int() (in module pycommute.models)": [[7, "pycommute.models.bose_hubbard_int"]], "dispersion() (in module pycommute.models)": [[7, "pycommute.models.dispersion"]], "dzyaloshinskii_moriya() (in module pycommute.models)": [[7, "pycommute.models.dzyaloshinskii_moriya"]], "extended_hubbard_int() (in module pycommute.models)": [[7, "pycommute.models.extended_hubbard_int"]], "heisenberg() (in module pycommute.models)": [[7, "pycommute.models.heisenberg"]], "holstein_int() (in module pycommute.models)": [[7, "pycommute.models.holstein_int"]], "hubbard_int() (in module pycommute.models)": [[7, "pycommute.models.hubbard_int"]], "ising() (in module pycommute.models)": [[7, "pycommute.models.ising"]], "jaynes_cummings() (in module pycommute.models)": [[7, "pycommute.models.jaynes_cummings"]], "kanamori_int() (in module pycommute.models)": [[7, "pycommute.models.kanamori_int"]], "kondo_int() (in module pycommute.models)": [[7, "pycommute.models.kondo_int"]], "pairing() (in module pycommute.models)": [[7, "pycommute.models.pairing"]], "pycommute.models": [[7, "module-pycommute.models"]], "quartic_int() (in module pycommute.models)": [[7, "pycommute.models.quartic_int"]], "rabi() (in module pycommute.models)": [[7, "pycommute.models.rabi"]], "slater_int() (in module pycommute.models)": [[7, "pycommute.models.slater_int"]], "spin_boson() (in module pycommute.models)": [[7, "pycommute.models.spin_boson"]], "t_j_int() (in module pycommute.models)": [[7, "pycommute.models.t_j_int"]], "tight_binding() (in module pycommute.models)": [[7, "pycommute.models.tight_binding"]], "zeeman() (in module pycommute.models)": [[7, "pycommute.models.zeeman"]]}})